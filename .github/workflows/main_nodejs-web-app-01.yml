# Docs for the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# More GitHub Actions for Azure: https://github.com/Azure/actions

name: Build and deploy Node.js app to Azure Web App - nodejs-web-app-01

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  NODE_VERSION: '20.x'
  AZURE_WEBAPP_NAME: 'nodejs-web-app-01'

jobs:
  build:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      
    steps:
      - name: üîÑ Checkout repository
        uses: actions/checkout@v4
        
      - name: üü¢ Set up Node.js ${{ env.NODE_VERSION }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          
      - name: üì¶ Clean install dependencies
        run: |
          npm install --only=production
          
      - name: üèóÔ∏è Build application (if build script exists)
        run: |
          if npm run build --if-present; then
            echo "‚úÖ Build completed successfully"
          else
            echo "‚ÑπÔ∏è No build script found, skipping build step"
          fi
          
      - name: üóÇÔ∏è Create deployment package
        run: |
          # Remove development dependencies and unnecessary files
          rm -rf node_modules/.cache
          rm -rf .git
          rm -rf .github
          rm -rf tests
          rm -rf *.md
          rm -rf .env.example
          
          # Create deployment zip
          zip -r release.zip . -x "*.git*" "node_modules/.cache/*" "*.md" ".env.example"
          
      - name: üì§ Upload artifact for deployment job
        uses: actions/upload-artifact@v4
        with:
          name: node-app
          path: release.zip
          retention-days: 1

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment: production
    
    permissions:
      id-token: write
      contents: read
      
    steps:
      - name: üì• Download artifact from build job
        uses: actions/download-artifact@v4
        with:
          name: node-app
          
      - name: üìÇ Unzip artifact for deployment
        run: |
          unzip -q release.zip
          rm release.zip
          ls -la
          
      - name: üîê Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_B84654222EAD4F09A1FB6C8EDAA89596 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_00B653C3188A416D9AA31C08507418AC }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_604556421FBB4902923CAE1ADA71FE98 }}
          
      - name: üöÄ Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          slot-name: 'Production'
          package: .
          
      - name: üè• Health Check
        run: |
          echo "Waiting for deployment to complete..."
          sleep 30
          
          # Try to hit the health endpoint
          for i in {1..5}; do
            if curl -f "https://${{ env.AZURE_WEBAPP_NAME }}.azurewebsites.net/health"; then
              echo "‚úÖ Health check passed"
              break
            else
              echo "‚è≥ Health check attempt $i failed, retrying..."
              sleep 10
            fi
          done
          
      - name: üßπ Cleanup
        if: always()
        run: |
          # Logout from Azure
          az logout